!function(){"use strict";var e={789:function(e,t,n){e.exports=n.p+"4e8e0a1d604782a0dff8.svg"},106:function(e,t,n){e.exports=n.p+"910c81e7387e24f6f846.svg"},294:function(e,t,n){e.exports=n.p+"a086f758840ae814ecde.svg"},21:function(e,t,n){e.exports=n.p+"a1892ea72cb87c8fc3aa.svg"},501:function(e,t,n){e.exports=n.p+"d86bb2edc2f6eadb96b7.svg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.m=e,n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n.b=document.baseURI||self.location.href,function(){var e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},t=document.querySelector(".profile"),r=t.querySelector(".profile__info"),o=t.querySelector(".profile__picture"),i=t.querySelector(".profile__image"),u=r.querySelector(".profile__edit-button"),a=document.querySelector("#profile-form"),s=r.querySelector(".profile__name"),l=r.querySelector(".profile__about-me"),c=a.querySelector("#name-input"),f=a.querySelector("#about-me-input"),p=t.querySelector(".profile__add-button"),y=document.querySelector("#image-zoom").querySelector(".popup__zoom"),d=y.querySelector(".popup__image"),m=y.querySelector(".popup__description"),h=new URL(n(789),n.b),v=new URL(n(106),n.b),b=new URL(n(21),n.b),_=new URL(n(501),n.b),S=new URL(n(294),n.b),g=[{paths:document.querySelectorAll(".header__image"),src:h},{paths:document.querySelectorAll(".popup__close-button"),src:v},{paths:document.querySelectorAll(".profile__edit-button"),src:b},{paths:document.querySelectorAll(".profile__plus-sign"),src:_},{paths:document.querySelectorAll(".profile__edit-picture"),src:S}];function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}var E=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,n=[{key:"getInitialCards",value:function(){var e=this.baseUrl+"/cards",t={headers:this.headers};return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"postCards",value:function(e){var t=this.baseUrl+"/cards",n={headers:this.headers,method:"POST",body:JSON.stringify({name:e.name,link:e.link})};return fetch(t,n).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){var t=this.baseUrl+"/cards/"+e,n={headers:this.headers,method:"DELETE"};return fetch(t,n).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"likeCard",value:function(e,t){var n=t?"DELETE":"PUT",r=this.baseUrl+"/cards/likes/"+e,o={headers:this.headers,method:n};return fetch(r,o).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getProfileInfo",value:function(){var e=this.baseUrl+"/users/me",t={headers:this.headers};return fetch(e,t).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateProfileInfo",value:function(e){var t=this.baseUrl+"/users/me",n={headers:this.headers,method:"PATCH",body:JSON.stringify({name:e.name,about:e.about})};return fetch(t,n).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateProfileImage",value:function(e){var t=this.baseUrl+"/users/me/avatar ",n={headers:this.headers,method:"PATCH",body:JSON.stringify({avatar:e.avatar})};return fetch(t,n).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}],n&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==P(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===P(o)?o:String(o)),r)}var o}var L=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=document.querySelector(t),this._popupCloseButton=this._popupSelector.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup__active"),this._setEventListeners()}},{key:"close",value:function(){document.removeEventListener("keydown",this._boundHandleEscClose),document.removeEventListener("click",this._boundHandleClickOverlay),this._popupCloseButton.removeEventListener("click",this._boundClose),this._popupSelector.classList.remove("popup__active")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleClickOverlay",value:function(e){e.target.classList.contains("popup__overlay")&&this.close()}},{key:"_setBoundFunctions",value:function(){this._boundHandleEscClose=this._handleEscClose.bind(this),this._boundHandleClickOverlay=this._handleClickOverlay.bind(this),this._boundClose=this.close.bind(this)}},{key:"_setEventListeners",value:function(){this._setBoundFunctions(),document.addEventListener("keydown",this._boundHandleEscClose),document.addEventListener("click",this._boundHandleClickOverlay),this._popupCloseButton.addEventListener("click",this._boundClose)}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},I.apply(this,arguments)}function q(e,t){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},q(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var n,r=t.image,o=t.imageAlt,a=t.legend;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._image=r,n._imageAlt=o,n._legend=a,n}return t=u,(n=[{key:"open",value:function(){d.src=this._image,d.alt=this._imageAlt,m.textContent=this._legend,I(B(u.prototype),"open",this).call(this)}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(L);function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==T(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},A.apply(this,arguments)}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}var F=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(r);if(o){var n=V(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===T(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._submitForm=t,n._formElement=n._popupSelector.querySelector(".popup__form"),n._submitElement=n._popupSelector.querySelector(".popup__button"),n}return t=u,(n=[{key:"_getInputValues",value:function(){return this._popupInputs=this._popupSelector.querySelectorAll(".popup__input"),this._popupInputs}},{key:"_renderLoading",value:function(e){e?this._submitElement.textContent="Salvando...":"#delete-form"==this._popupSelector?this._submitElement.textContent="Sim":this._submitElement.textContent="Salvar"}},{key:"_submitFunction",value:function(e){var t=this;e.preventDefault(),this._renderLoading(!0);var n=this._getInputValues();new Promise((function(e,r){e(n[0]?t._submitForm(n):t._submitForm())})).then((function(){t._renderLoading(!1),t.close()})).catch((function(e){console.log(e)}))}},{key:"_setBoundFunctions",value:function(){A(V(u.prototype),"_setBoundFunctions",this).call(this),this._boundsubmitFunction=this._submitFunction.bind(this)}},{key:"_setEventListeners",value:function(){A(V(u.prototype),"_setEventListeners",this).call(this),this._variables=this._getInputValues(),this._formElement.addEventListener("submit",this._boundsubmitFunction,!1)}},{key:"close",value:function(){A(V(u.prototype),"close",this).call(this),this._getInputValues(),this._popupInputs.forEach((function(e){e.value=""})),this._formElement.removeEventListener("submit",this._boundsubmitFunction,!1)}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(L);function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==D(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===D(o)?o:String(o)),r)}var o}var N=function(){function e(t){var n=t._id,r=t.name,o=t.link,i=t.ownerId,u=t.userId,a=t.likesArray,s=t.templateSelector,l=t.api;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._id=n,this._name=r,this._link=o,this._templateSelector=s,this._ownerId=i,this._userId=u,this._numberOfLikes=Object.keys(a).length,this._likesArray=a,this._isOwned=i==u,this._isLikedByUser=!1,this._api=l}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".post").cloneNode(!0)}},{key:"_setDeleteButton",value:function(){this._isOwned||this._element.querySelector(".post__delete-button").remove()}},{key:"_setLikesNumber",value:function(){this._element.querySelector(".post__like-number").textContent=this._numberOfLikes}},{key:"_setLikedButton",value:function(){var e=this;this._numberOfLikes>0&&this._likesArray.forEach((function(t){t._id==e._userId&&(e._isLikedByUser=!0)})),this._isLikedByUser&&this._element.querySelector(".post__like-button").classList.add("post__like_clicked")}},{key:"_configElement",value:function(){this._element.querySelector(".post__description").textContent=this._name,this._element.querySelector(".post__image").src=this._link,this._element.querySelector(".post__image").alt="Foto de ".concat(this._name),this._setDeleteButton(),this._setLikesNumber(),this._setLikedButton()}},{key:"_addEventListernerOpenPopup",value:function(){this._element.querySelector(".post__image").addEventListener("click",(function(e){new U("#image-zoom",{image:e.target.src,imageAlt:e.target.alt,legend:e.target.nextElementSibling.textContent}).open()}))}},{key:"_addEventListernerLikeButton",value:function(){var e=this;this._element.querySelector(".post__like-button").addEventListener("click",(function(t){e._api.likeCard(e._id,e._isLikedByUser).then((function(t){e._likesArray=t.likes,e._numberOfLikes=Object.keys(t.likes).length,e._isLikedByUser=!e._isLikedByUser,e._element.querySelector(".post__like-button").classList.toggle("post__like_clicked"),e._setLikesNumber()})).catch((function(e){console.log(e)}))}))}},{key:"_addEventListernerRemoveButton",value:function(){var e=this;this._element.querySelector(".post__delete-button").addEventListener("click",(function(t){new F("#delete-form",(function(){e._api.deleteCard(e._id).then((function(){e._element.remove()})).catch((function(e){console.log(e)}))})).open()}))}},{key:"_setEventListeners",value:function(){this._addEventListernerOpenPopup(),this._addEventListernerLikeButton(),this._isOwned&&this._addEventListernerRemoveButton()}},{key:"createPost",value:function(){return this._element=this._getTemplate(),this._configElement(),this._setEventListeners(),this._element}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function z(e){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},z(e)}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==z(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===z(o)?o:String(o)),r)}var o}var M=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"setItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this.clear(),this._items.forEach((function(t){e._renderer(t)}))}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function $(e){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$(e)}function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==$(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==$(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===$(o)?o:String(o)),r)}var o}var K=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationVariables=t,this._formElement=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._validationVariables.inputErrorClass),n.textContent=t,n.classList.add(this._validationVariables.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._validationVariables.inputErrorClass),t.classList.remove(this._validationVariables.errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._validationVariables.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._validationVariables.inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._validationVariables.inputSelector)),this._buttonElement=this._formElement.querySelector(this._validationVariables.submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&G(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function Q(e){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Q(e)}function W(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==Q(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==Q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===Q(o)?o:String(o)),r)}var o}var X=function(){function e(t){var n=t.name,r=t.description,o=t.avatarLink,i=t.id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._description=r,this._avatarLink=o,this._id=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){c.value=this._name,f.value=this._description}},{key:"setUserInfo",value:function(){s.textContent=this._name,l.textContent=this._description}},{key:"setUserPicture",value:function(){o.src=this._avatarLink,o.alt="Foto de ".concat(this._name)}}])&&W(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function Y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}g.forEach((function(e){e.paths.forEach((function(t){t.src=e.src}))}));var Z=new E({baseUrl:"https://around.nomoreparties.co/v1/web_ptbr_cohort_03",headers:{authorization:"30daf07f-92e8-4bf2-9f92-48f8d54dd26d","Content-Type":"application/json"}}),ee=Z.getProfileInfo().then((function(e){var t=new X({name:e.name,description:e.about,avatarLink:e.avatar,id:e._id});return t.setUserPicture(),t.setUserInfo(),t})).catch((function(e){console.log(e)})),te=ee.then((function(e){return Z.getInitialCards().then((function(t){var n=new M({items:t,renderer:function(t){var r=new N({_id:t._id,name:t.name,link:t.link,ownerId:t.owner._id,userId:e._id,likesArray:t.likes,templateSelector:"#post",api:Z}).createPost();n.setItem(r)}},".posts");return n}))})).then((function(e){return e.renderItems(),e})).catch((function(e){console.log(e)}));Array.from(document.querySelectorAll(e.formSelector)).map((function(t){return new K(e,t)})).forEach((function(e){e.enableValidation()}));var ne=new F("#profile-form",(function(e){Z.updateProfileInfo({name:e[0].value,about:e[1].value}).then((function(e){new X({name:e.name,description:e.about,avatarLink:e.avatar,id:e._id}).setUserInfo()})).catch((function(e){console.log(e)}))}));u.addEventListener("click",(function(){new X({name:s.textContent,description:l.textContent}).getUserInfo(),ne.open()}));var re=new F("#place-form",(function(e){Promise.all([te,ee,{name:e[0].value,link:e[1].value}]).then((function(e){var t,n,r=(n=3,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,u,a=[],s=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);s=!0);}catch(e){l=!0,o=e}finally{try{if(!s&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(t,n)||function(e,t){if(e){if("string"==typeof e)return Y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Y(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1],u=r[2];return Z.postCards(u).then((function(e){var t=new N({_id:e._id,name:e.name,link:e.link,ownerId:e.owner._id,userId:i._id,likesArray:e.likes,templateSelector:"#post",api:Z});console.log(t);var n=t.createPost();o.setItem(n)}))})).catch((function(e){console.log(e)}))})),oe=new F("#profile-image",(function(e){Z.updateProfileImage({avatar:e[0].value}).then((function(e){new X({name:e.name,description:e.about,avatarLink:e.avatar,id:e._id}).setUserPicture()})).catch((function(e){console.log(e)}))}));p.addEventListener("click",(function(){re.open()})),i.addEventListener("click",(function(){oe.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,